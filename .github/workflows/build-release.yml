name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

jobs:
  release:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: aarch64_cortex-a53
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2710
            sdk_name: -sdk-bcm27xx-bcm2710_
          - arch: aarch64_cortex-a72
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/mvebu/cortexa72
            sdk_name: -sdk-mvebu-cortexa72_
          - arch: aarch64_generic
            sdk_url_path: https://downloads.openwrt.org/snapshots/targets/layerscape/armv8_64b
            sdk_name: -sdk-layerscape-armv8_64b_

    env:
      SDK_URL_PATH: ${{ matrix.sdk_url_path }}
      SDK_NAME: ${{ matrix.sdk_name }}
      ARCH: ${{ matrix.arch }}
      CACHE_DIR: ~/cache
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}:openwrt-frp:${{ env.ARCH }}:release:cache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-frp:${{ env.ARCH }}:cache:

      - name: Install Dependencies
        run: |
          sudo apt-get update && \
            sudo apt-get install -yq gettext libncurses5-dev xsltproc zstd

      - name: Prepare SDK Home
        run: |
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV

      - name: Build package
        env:
          OPENWRT_GOLANG_COMMIT: ${{ secrets.OPENWRT_GOLANG_COMMIT }}
        run: sh compile.sh

      - name: Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: "*.ipk"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
